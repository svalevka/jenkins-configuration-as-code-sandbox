jenkins:
  systemMessage: "JCASC managed"
  numExecutors: 4
  scmCheckoutRetryCount: 2
  mode: NORMAL
  quietPeriod: 5
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: false
  primaryView:
    all:
      name: "all"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  globalNodeProperties:
  - envVars:
      env:
      - key: "gitlabUrl"
        value: "http://localhost:80"
      - key: "jenkinsUrl"
        value: "http://localhost:8080"
      - key: "jenkinsGitRepo"
        value: "https://github.com/svalevka/jenkins-configuration-as-code-sandbox.git"
credentials:
  system:
    domainCredentials:
      - credentials:
          - string:
              scope: GLOBAL
              id: "gitlab-token"
              secret: ${personal_access_token}
              description: "GitLab personal access token"

unclassified:
  location:
    url: "http://localhost:8080/"
  globalLibraries:
    libraries:
    - name: "Sandbox"
    - defaultVersion: "master"
      implicit: true
      name: "sandbox"
      retriever:
        modernSCM:
          scm:
            git:
              id: "sandbox-repo"
              remote: "https://github.com/svalevka/jenkins-configuration-as-code-sandbox.git"
              traits:
              - cloneOptionTrait:
                  extension:
                    depth: 1
                    noTags: true
                    shallow: true
jobs:
    - script: >
        folder('Configuration') {
          displayName('Configuration')
          description('Configuration Pipelines')         
        }     
    - script: >
          pipelineJob('Generic Job Example') {
          parameters {
            stringParam('VARIABLE_FROM_POST', '')
          }

          triggers {
            genericTrigger {
            genericVariables {
              genericVariable {
              key("VARIABLE_FROM_POST")
              value("\$.something")
              expressionType("JSONPath") //Optional, defaults to JSONPath
              regexpFilter("") //Optional, defaults to empty string
              defaultValue("") //Optional, defaults to empty string
              }
            }
            genericRequestVariables {
              genericRequestVariable {
              key("requestParameterName")
              regexpFilter("")
              }
            }
            genericHeaderVariables {
              genericHeaderVariable {
              key("requestHeaderName")
              regexpFilter("")
              }
            }
            token('abc123')
            tokenCredentialId('')
            printContributedVariables(true)
            printPostContent(true)
            silentResponse(false)
            shouldNotFlattern(false)
            regexpFilterText("\$VARIABLE_FROM_POST")
            regexpFilterExpression("aRegExp")
            }
          }

          definition {
            cps {
            // Or just refer to a Jenkinsfile containing the pipeline
            script('''
              node {
              stage('Some Stage') {
                println "VARIABLE_FROM_POST: " + VARIABLE_FROM_POST
              }
              }
            ''')
            sandbox()
            }
          }
          }
